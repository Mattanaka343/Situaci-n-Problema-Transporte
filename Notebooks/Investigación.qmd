---
title: "Factores sociodemográficos y sus efectos en el transporte"
author: "Mateo Yáñez Tanaka, Fernando Pavía González"
format:
   html:
     toc: true
     html-math-method: katex
     embed-resources: true
     self-contained-math: true
     df-print: kable
editor: source
---
# Factores Sociodemográficos y sus efectos en el transporte

Autores: Fernando Pavía-González, Fernando Ramos-Valdez, Jorge Sanchez-Ponce, Mateo Yáñez-Tanaka 

## Abstract

Placeholder text

## Metodología
```{r}
#| eval: false
install.packages('bnlearn')
install.packages('BiocManager')
install.packages('')
BiocManager::install('Rgraphviz')
```

```{r}
library(tidyverse)
library(bnlearn)
library(tidyverse)
```

Para entender propiamente los efectos que tienen los factores demográficos en los patrones de transporte de la población propondremos utilizar 4 DAGs (Directed Acyclical Graphs), de los cuáles dos estarán basados en la teoría y uno será el resultado de la aplicación de hill climbing:

```{r}
data = read.csv('../Data/datos.csv')
head(data)
```

```{r}
data = data |> select(-id_viv)
head(data)
```

Como primera DAG teórica propusimos el modelo preliminar en el cual definimos lo siguiente: La edad y el sexo son los nodos raíz e independientes entre ellos. El estrato socioeconómico esta dado por la edad y el sexo; este mismo se relaciona con la cantidad de vehiculos privados que la persona posee y define la población dentro de su localidad. La cantidad de vehiculos da a entender el vehículo que se utiliza en un viaje. Finalmente, el día del viaje esta dado por el vehículo que se usa en dicho viaje y la población de su localidad.

```{r}
dag = empty.graph(nodes = c('L','C','A','M','B','D','E','V','S'))
```

```{r}
arc_set = matrix(c("E","C",
                   "S","C",
                   "C","A",
                   "C","M",
                   "C","B",
                   "C","L",
                   "A","D",
                   "M","D",
                   "B","D",
                   "D","V",
                   "L","V"), byrow = TRUE, ncol = 2,
                 dimnames = list(NULL, c("from", "to")))
```

```{r}
arcs(dag) = arc_set
```

```{r}
dag
```

```{r}
graphviz.plot(dag, shape = "ellipse")
```

Para la segunda DAG consideramos la primera; en este caso queremos saber la fuerza de cada arco del DAG, asi consideramos las independencias condicionales de los nodos y saber si debemos modificar el DAG original, creando un segundo DAG por encima de este con dichas modificaciones.

```{r}
# Ver la estructura actual
str(data)

# Detectar columnas de tipo integer
int_cols <- sapply(data, is.integer)

# Convertir esas columnas a factor
data[int_cols] <- lapply(data[int_cols], as.factor)
```

```{r}
# Verificar
str(data)
```


```{r}
arc.strength(dag, data = data, criterion = "mi")
```

Dado los resultaods anteriores, podemos inferir que hay tres arcos que no deberían de existir en el DAG original, estos son: de A a D, de M a D y de B a D; es decir que el nodo D que corresponde a el vehículo con el que viajas es independiente de los demás nodos, no tiene sentido, más no obstante, estos son los resultados.

```{r}
dag2 = empty.graph(nodes = c('L','C','A','M','B','D','E','V','S'))
```

```{r}
arc_set2 = matrix(c("E","C",
                   "S","C",
                   "C","A",
                   "C","M",
                   "C","B",
                   "C","L",
                   "D","V",
                   "L","V"), byrow = TRUE, ncol = 2,
                 dimnames = list(NULL, c("from", "to")))
```

```{r}
arcs(dag2) = arc_set2
```

```{r}
dag2
```

```{r}
graphviz.plot(dag2, shape = "ellipse")
```

## Queries


- Query #2: ¿Cuál es la probabilidad de que alguien de estrato sociodemográfico bajo tenga ya sea una moto, un auto o una bicicleta?
Para facilitar la solución a este query, vamos a tomar solo las variables que necesitamos, en este caso necesitamos a: C (estrato socioeconómico), A (#Autos), M (#Motocicletas), B (#Bicicletas). También usaremos dos DAGs, la primera teórica y la mejor DAG utilizando hill climbing.

```{r}
dataQ2 = data |>
        select(-L,-D,-E,-V,-S)
head(dataQ2)
```

```{r}
bn=bn.fit(dag,data=data)
```

```{r}
cpquery(bn, event = (A==1 | M==1 | B==1), evidence = (E==1 | E==2), n = 10^6)
```

Ahora encontraremos la "mejor" DAG utilizando el metodo de hill climbing; esto para realizar el mismo query y comparar los resultados.

```{r}
best_dag = hc(data)
```

```{r}
graphviz.plot(best_dag, shape = "ellipse")
```

```{r}
bn1=bn.fit(best_dag,data=data)
```

```{r}
cpquery(bn1, event = (A==1 | M==1 | B==1), evidence = (E==1 | E==2), n = 10^6)
```

Obtenemos probabilidades muy similares, con diferencia de 0.01; dicho esto podemos inferir que, aunque, nuestra primera DAG y la DAG dada con hill climbing, sean bastante diferentes, muestran una probabilidad similar de que alguien de estrato sociodemográfico bajo tenga ya sea una moto, un auto o una bicicleta.


